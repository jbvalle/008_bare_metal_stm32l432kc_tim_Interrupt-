q
b main
r
w
x
quit
b main
r
bl
l
b 3
d
b main
r
quit
b main
r
q
b main
r
q
b main
r
n
n
n
n
n
n
n
n
n
n
n
n
monitor reset
monitor reset init
r
n
n
n
p TIM2_handler 
q
l 120
l
monitor reset 
b main
r
n
n
n
n
p TIM3->TIMx_PSC 
p &(TIM3->TIMx_PSC)
p (TIM3->TIMx_PSC
p TIM3->TIMx_PSC
p TIM3->TIMx_ARR 
p TIM3->TIMx_CNT
n
p TIM2->TIMx_ARR 
p TIM2->TIMx_PSC 
p TIM3->TIMx_PSC
q
b main
r
n
p TIM3
p TIM3->TIMx_PSC 
p TIM2->TIMx_PSC 
q
b main
r
n
p toggle_frequency_TIM3
n
p TIM3->TIMx_PSC 
n
p &(TIM3->TIMx_PSC)
x/s 0x40000428
q
b main
r
n
p TIM3->TIMx_PSC 
q
b main
r
n
q
b main
r
p TIM2_handler 
p &TIM2_handler 
n
n
n
n
n
n
n
n
p fn
p Tim
q
q
b main
r
n
p blink
p TIM2_handler 
n
p fn
p blink
p *fn
p fn()
p &blink
p &fn
qy
q
b main
r
l 40
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
p *fn
p fn
p *fn
p **fn
p blink
p fn
p *fn
q
b main
r
n
p fn
p *fn
b main
r
b transform 
d
b transform 
r
q
b 112
r
n
p fn
p blink
p (fn - 1)
p *fn
q
b 112
r
b main
r
q
b main
r
n
q
q
b main
r
n
n
p fn
p blink
p (fn - 1)
p *fn
p fn - 1
q
b main
r
n
n
p fn
p blink
q
b main
r
p blink
p &blink
p *blink
q
monitor flash write_image erase debug/main.elf
monitor flash write_image erase debug/main.elf
monitor reset init
monitor flash write_image erase debug/main.elf
b main
r
p fn
n
display fn
n
p blink
n
n
n
n
n
q
q
b main
r
n
s
n
n
p toggle_
p toggle_frequency_TIM2 
p toggle_period_ms 
p toggle_period_ms / 1000
q
